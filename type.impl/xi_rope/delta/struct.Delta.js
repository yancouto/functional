(function() {var type_impls = {
"xi_rope":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Delta%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#41\">source</a><a href=\"#impl-Clone-for-Delta%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"xi_rope/tree/trait.NodeInfo.html\" title=\"trait xi_rope::tree::NodeInfo\">NodeInfo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#41\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","xi_rope::rope::RopeDelta"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Delta%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#335-367\">source</a><a href=\"#impl-Debug-for-Delta%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: <a class=\"trait\" href=\"xi_rope/tree/trait.NodeInfo.html\" title=\"trait xi_rope::tree::NodeInfo\">NodeInfo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#339-366\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","xi_rope::rope::RopeDelta"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Delta%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#53-333\">source</a><a href=\"#impl-Delta%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: <a class=\"trait\" href=\"xi_rope/tree/trait.NodeInfo.html\" title=\"trait xi_rope::tree::NodeInfo\">NodeInfo</a>&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.simple_edit\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#54-62\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.simple_edit\" class=\"fn\">simple_edit</a>&lt;T: <a class=\"trait\" href=\"xi_rope/interval/trait.IntervalBounds.html\" title=\"trait xi_rope::interval::IntervalBounds\">IntervalBounds</a>&gt;(\n    interval: T,\n    rope: <a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;,\n    base_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_simple_insert\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#65-89\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.as_simple_insert\" class=\"fn\">as_simple_insert</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>If this delta represents a simple insertion, returns the inserted node.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_simple_delete\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#93-115\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.is_simple_delete\" class=\"fn\">is_simple_delete</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this delta represents a single deletion without\nany insertions. Note that this is <code>false</code> for the trivial delta.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_identity\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#118-126\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.is_identity\" class=\"fn\">is_identity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if applying the delta will cause no change.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#130-140\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;self, base: &amp;<a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;) -&gt; <a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Apply the delta to the given rope. May not work well if the length of the rope\nis not compatible with the construction of the delta.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.factor\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#155-181\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.factor\" class=\"fn\">factor</a>(self) -&gt; (<a class=\"struct\" href=\"xi_rope/delta/struct.InsertDelta.html\" title=\"struct xi_rope::delta::InsertDelta\">InsertDelta</a>&lt;N&gt;, <a class=\"struct\" href=\"xi_rope/multiset/struct.Subset.html\" title=\"struct xi_rope::multiset::Subset\">Subset</a>)</h4></section></summary><div class=\"docblock\"><p>Factor the delta into an insert-only delta and a subset representing deletions.\nApplying the insert then the delete yields the same result as the original delta:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>test_factor(d : <span class=\"kw-2\">&amp;</span>Delta&lt;RopeInfo&gt;, r : <span class=\"kw-2\">&amp;</span>Rope) {\n    <span class=\"kw\">let </span>(ins, del) = d.clone().factor();\n    <span class=\"kw\">let </span>del2 = del.transform_expand(<span class=\"kw-2\">&amp;</span>ins.inserted_subset());\n    <span class=\"macro\">assert_eq!</span>(String::from(del2.delete_from(<span class=\"kw-2\">&amp;</span>ins.apply(r))), String::from(d.apply(r)));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.synthesize\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#210-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.synthesize\" class=\"fn\">synthesize</a>(\n    tombstones: &amp;<a class=\"struct\" href=\"xi_rope/tree/struct.Node.html\" title=\"struct xi_rope::tree::Node\">Node</a>&lt;N&gt;,\n    from_dels: &amp;<a class=\"struct\" href=\"xi_rope/multiset/struct.Subset.html\" title=\"struct xi_rope::multiset::Subset\">Subset</a>,\n    to_dels: &amp;<a class=\"struct\" href=\"xi_rope/multiset/struct.Subset.html\" title=\"struct xi_rope::multiset::Subset\">Subset</a>\n) -&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;N&gt;</h4></section></summary><div class=\"docblock\"><p>Synthesize a delta from a “union string” and two subsets: an old set\nof deletions and a new set of deletions from the union. The Delta is\nfrom text to text, not union to union; anything in both subsets will\nbe assumed to be missing from the Delta base and the new text. You can\nalso think of these as a set of insertions and one of deletions, with\noverlap doing nothing. This is basically the inverse of <code>factor</code>.</p>\n<p>Since only the deleted portions of the union string are necessary,\ninstead of requiring a union string the function takes a <code>tombstones</code>\nrope which contains the deleted portions of the union string. The\n<code>from_dels</code> subset must be the interleaving of <code>tombstones</code> into the\nunion string.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>test_synthesize(d : <span class=\"kw-2\">&amp;</span>Delta&lt;RopeInfo&gt;, r : <span class=\"kw-2\">&amp;</span>Rope) {\n    <span class=\"kw\">let </span>(ins_d, del) = d.clone().factor();\n    <span class=\"kw\">let </span>ins = ins_d.inserted_subset();\n    <span class=\"kw\">let </span>del2 = del.transform_expand(<span class=\"kw-2\">&amp;</span>ins);\n    <span class=\"kw\">let </span>r2 = ins_d.apply(<span class=\"kw-2\">&amp;</span>r);\n    <span class=\"kw\">let </span>tombstones = ins.complement().delete_from(<span class=\"kw-2\">&amp;</span>r2);\n    <span class=\"kw\">let </span>d2 = Delta::synthesize(<span class=\"kw-2\">&amp;</span>tombstones, <span class=\"kw-2\">&amp;</span>ins, <span class=\"kw-2\">&amp;</span>del);\n    <span class=\"macro\">assert_eq!</span>(String::from(d2.apply(r)), String::from(d.apply(r)));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.summary\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#280-295\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.summary\" class=\"fn\">summary</a>(&amp;self) -&gt; (<a class=\"struct\" href=\"xi_rope/interval/struct.Interval.html\" title=\"struct xi_rope::interval::Interval\">Interval</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Produce a summary of the delta. Everything outside the returned interval\nis unchanged, and the old contents of the interval are replaced by new\ncontents of the returned length. Equations:</p>\n<p><code>(iv, new_len) = self.summary()</code></p>\n<p><code>new_s = self.apply(s)</code></p>\n<p><code>new_s = simple_edit(iv, new_s.subseq(iv.start(), iv.start() + new_len), s.len()).apply(s)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_document_len\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#301-303\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.new_document_len\" class=\"fn\">new_document_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the length of the new document. In other words, the length of\nthe transformed string after this Delta is applied.</p>\n<p><code>d.apply(r).len() == d.new_document_len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inserts_len\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#315-322\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.inserts_len\" class=\"fn\">inserts_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the sum length of the inserts of the delta.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_inserts\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#325-327\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.iter_inserts\" class=\"fn\">iter_inserts</a>(&amp;self) -&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.InsertsIter.html\" title=\"struct xi_rope::delta::InsertsIter\">InsertsIter</a>&lt;'_, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"InsertsIter&lt;&#39;_, N&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Iterates over all the inserts of the delta.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_deletions\" class=\"method\"><a class=\"src rightside\" href=\"src/xi_rope/delta.rs.html#330-332\">source</a><h4 class=\"code-header\">pub fn <a href=\"xi_rope/delta/struct.Delta.html#tymethod.iter_deletions\" class=\"fn\">iter_deletions</a>(&amp;self) -&gt; <a class=\"struct\" href=\"xi_rope/delta/struct.DeletionsIter.html\" title=\"struct xi_rope::delta::DeletionsIter\">DeletionsIter</a>&lt;'_, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DeletionsIter&lt;&#39;_, N&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Iterates over all the deletions of the delta.</p>\n</div></details></div></details>",0,"xi_rope::rope::RopeDelta"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Delta%3CRopeInfo%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/xi_rope/serde_impls.rs.html#90-130\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Delta%3CRopeInfo%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;<a class=\"struct\" href=\"xi_rope/rope/struct.RopeInfo.html\" title=\"struct xi_rope::rope::RopeInfo\">RopeInfo</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/xi_rope/serde_impls.rs.html#91-129\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","xi_rope::rope::RopeDelta"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Delta%3CRopeInfo%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/xi_rope/serde_impls.rs.html#78-88\">source</a><a href=\"#impl-Serialize-for-Delta%3CRopeInfo%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"xi_rope/delta/struct.Delta.html\" title=\"struct xi_rope::delta::Delta\">Delta</a>&lt;<a class=\"struct\" href=\"xi_rope/rope/struct.RopeInfo.html\" title=\"struct xi_rope::rope::RopeInfo\">RopeInfo</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/xi_rope/serde_impls.rs.html#79-87\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","xi_rope::rope::RopeDelta"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()